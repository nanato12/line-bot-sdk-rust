/*
* Copyright 2023 nanato12
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct RichMenuResponse {
    /// ID of a rich menu
    #[serde(rename = "richMenuId")]
    pub rich_menu_id: String,
    #[serde(rename = "size")]
    pub size: Box<crate::messaging_api::models::RichMenuSize>,
    /// `true` to display the rich menu by default. Otherwise, `false`.
    #[serde(rename = "selected")]
    pub selected: bool,
    /// Name of the rich menu. This value can be used to help manage your rich menus and is not displayed to users.
    #[serde(rename = "name")]
    pub name: String,
    /// Text displayed in the chat bar
    #[serde(rename = "chatBarText")]
    pub chat_bar_text: String,
    /// Array of area objects which define the coordinates and size of tappable areas
    #[serde(rename = "areas")]
    pub areas: Vec<crate::messaging_api::models::RichMenuArea>,
}

impl RichMenuResponse {
    pub fn new(rich_menu_id: String, size: crate::messaging_api::models::RichMenuSize, selected: bool, name: String, chat_bar_text: String, areas: Vec<crate::messaging_api::models::RichMenuArea>) -> RichMenuResponse {
        RichMenuResponse {
            rich_menu_id,
            size: Box::new(size),
            selected,
            name,
            chat_bar_text,
            areas,
        }
    }
}


