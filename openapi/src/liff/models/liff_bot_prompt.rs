/*
* Copyright 2023 nanato12
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/*
 * LIFF server API
 *
 * LIFF Server API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// LiffBotPrompt : Specify the setting for bot link feature with one of the following values:  `normal`: Display the option to add the LINE Official Account as a friend in the channel consent screen. `aggressive`: Display a screen with the option to add the LINE Official Account as a friend after the channel consent screen. `none`: Don't display the option to add the LINE Official Account as a friend.   The default value is none. 

/// Specify the setting for bot link feature with one of the following values:  `normal`: Display the option to add the LINE Official Account as a friend in the channel consent screen. `aggressive`: Display a screen with the option to add the LINE Official Account as a friend after the channel consent screen. `none`: Don't display the option to add the LINE Official Account as a friend.   The default value is none. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LiffBotPrompt {
    #[serde(rename = "normal")]
    Normal,
    #[serde(rename = "aggressive")]
    Aggressive,
    #[serde(rename = "none")]
    None,

}

impl ToString for LiffBotPrompt {
    fn to_string(&self) -> String {
        match self {
            Self::Normal => String::from("normal"),
            Self::Aggressive => String::from("aggressive"),
            Self::None => String::from("none"),
        }
    }
}

impl Default for LiffBotPrompt {
    fn default() -> LiffBotPrompt {
        Self::Normal
    }
}




