/*
* Copyright 2023 nanato12
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/*
 * LIFF server API
 *
 * LIFF Server API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AddLiffAppRequest {
    #[serde(rename = "view")]
    pub view: Box<crate::liff::models::LiffView>,
    /// Name of the LIFF app.  The LIFF app name can't include \"LINE\" or similar strings, or inappropriate strings. 
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "features", skip_serializing_if = "Option::is_none")]
    pub features: Option<Box<crate::liff::models::LiffFeatures>>,
    /// How additional information in LIFF URLs is handled. Specify `concat`. 
    #[serde(rename = "permanentLinkPattern", skip_serializing_if = "Option::is_none")]
    pub permanent_link_pattern: Option<String>,
    #[serde(rename = "scope", skip_serializing_if = "Option::is_none")]
    pub scope: Option<Vec<crate::liff::models::LiffScope>>,
    #[serde(rename = "botPrompt", skip_serializing_if = "Option::is_none")]
    pub bot_prompt: Option<crate::liff::models::LiffBotPrompt>,
}

impl AddLiffAppRequest {
    pub fn new(view: crate::liff::models::LiffView) -> AddLiffAppRequest {
        AddLiffAppRequest {
            view: Box::new(view),
            description: None,
            features: None,
            permanent_link_pattern: None,
            scope: None,
            bot_prompt: None,
        }
    }
}


