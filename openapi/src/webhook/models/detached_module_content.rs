/*
* Copyright 2023 nanato12
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/*
 * Webhook Type Definition
 *
 * Webhook event definition of the LINE Messaging API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct DetachedModuleContent {
    /// Type
    #[serde(rename = "type")]
    pub r#type: String,
    /// Detached LINE Official Account bot user ID
    #[serde(rename = "botId")]
    pub bot_id: String,
    /// Reason for detaching
    #[serde(rename = "reason")]
    pub reason: ReasonWebhook,
}

impl DetachedModuleContent {
    pub fn new(r#type: String, bot_id: String, reason: ReasonWebhook) -> DetachedModuleContent {
        DetachedModuleContent {
            r#type,
            bot_id,
            reason,
        }
    }
}

/// Reason for detaching
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReasonWebhook {
    #[serde(rename = "bot_deleted")]
    BotDeleted,
}

impl Default for ReasonWebhook {
    fn default() -> ReasonWebhook {
        Self::BotDeleted
    }
}
