/*
* Copyright (C) 2016 LINE Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/*
 * Webhook Type Definition
 *
 * Webhook event definition of the LINE Messaging API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LocationMessageContent {
    
    
    
    /// Message ID
    #[serde(rename = "id")]
    pub id: String,
    /// Title
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// Address
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    /// Latitude
    #[serde(rename = "latitude")]
    pub latitude: f64,
    /// Longitude
    #[serde(rename = "longitude")]
    pub longitude: f64,
}

impl LocationMessageContent {
    pub fn new(id: String, latitude: f64, longitude: f64) -> LocationMessageContent {
        LocationMessageContent {
            
            id,
            title: None,
            address: None,
            latitude,
            longitude,
        }
    }
}


