/*
* Copyright (C) 2016 LINE Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * Generated by: https://openapi-generator.tech
 */

/// AudienceGroupJobStatus : Job status

/// Job status
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AudienceGroupJobStatus {
    #[serde(rename = "QUEUED")]
    Queued,
    #[serde(rename = "WORKING")]
    Working,
    #[serde(rename = "FINISHED")]
    Finished,
    #[serde(rename = "FAILED")]
    Failed,
}

impl ToString for AudienceGroupJobStatus {
    fn to_string(&self) -> String {
        match self {
            Self::Queued => String::from("QUEUED"),
            Self::Working => String::from("WORKING"),
            Self::Finished => String::from("FINISHED"),
            Self::Failed => String::from("FAILED"),
        }
    }
}

impl Default for AudienceGroupJobStatus {
    fn default() -> AudienceGroupJobStatus {
        Self::Queued
    }
}
