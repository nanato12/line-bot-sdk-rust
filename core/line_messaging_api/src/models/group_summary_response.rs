/*
* Copyright (C) 2016 LINE Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.2
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GroupSummaryResponse {
    /// Group ID
    #[serde(rename = "groupId")]
    pub group_id: String,
    /// Group name
    #[serde(rename = "groupName")]
    pub group_name: String,
    /// Group icon URL. Not included in the response if the user doesn't set a group profile icon.
    #[serde(rename = "pictureUrl", skip_serializing_if = "Option::is_none")]
    pub picture_url: Option<String>,
}

impl GroupSummaryResponse {
    pub fn new(group_id: String, group_name: String) -> GroupSummaryResponse {
        GroupSummaryResponse {
            group_id,
            group_name,
            picture_url: None,
        }
    }
}
