/*
* Copyright (C) 2016 LINE Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.2
 *
 * Generated by: https://openapi-generator.tech
 */

/// RichMenuBatchProgressPhase : The current status. One of:  `ongoing`: Rich menu batch control is in progress. `succeeded`: Rich menu batch control is complete. `failed`: Rich menu batch control failed.           This means that the rich menu for one or more users couldn't be controlled.           There may also be users whose operations have been successfully completed.

/// The current status. One of:  `ongoing`: Rich menu batch control is in progress. `succeeded`: Rich menu batch control is complete. `failed`: Rich menu batch control failed.           This means that the rich menu for one or more users couldn't be controlled.           There may also be users whose operations have been successfully completed.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RichMenuBatchProgressPhase {
    #[serde(rename = "ongoing")]
    Ongoing,
    #[serde(rename = "succeeded")]
    Succeeded,
    #[serde(rename = "failed")]
    Failed,
}

impl ToString for RichMenuBatchProgressPhase {
    fn to_string(&self) -> String {
        match self {
            Self::Ongoing => String::from("ongoing"),
            Self::Succeeded => String::from("succeeded"),
            Self::Failed => String::from("failed"),
        }
    }
}

impl Default for RichMenuBatchProgressPhase {
    fn default() -> RichMenuBatchProgressPhase {
        Self::Ongoing
    }
}
