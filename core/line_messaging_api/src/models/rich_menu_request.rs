/*
* Copyright (C) 2016 LINE Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.2
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct RichMenuRequest {
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<Box<crate::models::RichMenuSize>>,
    /// `true` to display the rich menu by default. Otherwise, `false`.
    #[serde(rename = "selected", skip_serializing_if = "Option::is_none")]
    pub selected: Option<bool>,
    /// Name of the rich menu. This value can be used to help manage your rich menus and is not displayed to users.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Text displayed in the chat bar
    #[serde(rename = "chatBarText", skip_serializing_if = "Option::is_none")]
    pub chat_bar_text: Option<String>,
    /// Array of area objects which define the coordinates and size of tappable areas
    #[serde(rename = "areas", skip_serializing_if = "Option::is_none")]
    pub areas: Option<Vec<crate::models::RichMenuArea>>,
}

impl RichMenuRequest {
    pub fn new() -> RichMenuRequest {
        RichMenuRequest {
            size: None,
            selected: None,
            name: None,
            chat_bar_text: None,
            areas: None,
        }
    }
}
