/*
* Copyright (C) 2016 LINE Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * Generated by: https://openapi-generator.tech
 */

/// GetModulesResponse : List of bots to which the module is attached

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetModulesResponse {
    /// Array of Bot list Item objects representing basic information about the bot.
    #[serde(rename = "bots")]
    pub bots: Vec<crate::models::ModuleBot>,
    /// Continuation token. Used to get the next array of basic bot information. This property is only returned if there are more unreturned results.
    #[serde(rename = "next", skip_serializing_if = "Option::is_none")]
    pub next: Option<String>,
}

impl GetModulesResponse {
    /// List of bots to which the module is attached
    pub fn new(bots: Vec<crate::models::ModuleBot>) -> GetModulesResponse {
        GetModulesResponse { bots, next: None }
    }
}
