/*
* Copyright 2023 nanato12
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * Generated by: https://openapi-generator.tech
 */

/// AudienceGroupCreateRoute : How the audience was created. One of:  - `OA_MANAGER`: Audience created with [LINE Official Account Manager](https://manager.line.biz/). - `MESSAGING_API`: Audience created with Messaging API. - `POINT_AD`: Audience created with [LINE Points Ads](https://www.linebiz.com/jp/service/line-point-ad/) (Japanese only). - `AD_MANAGER`: Audience created with [LINE Ads](https://admanager.line.biz/).

/// How the audience was created. One of:  - `OA_MANAGER`: Audience created with [LINE Official Account Manager](https://manager.line.biz/). - `MESSAGING_API`: Audience created with Messaging API. - `POINT_AD`: Audience created with [LINE Points Ads](https://www.linebiz.com/jp/service/line-point-ad/) (Japanese only). - `AD_MANAGER`: Audience created with [LINE Ads](https://admanager.line.biz/).
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AudienceGroupCreateRoute {
    #[serde(rename = "OA_MANAGER")]
    OaManager,
    #[serde(rename = "MESSAGING_API")]
    MessagingApi,
    #[serde(rename = "POINT_AD")]
    PointAd,
    #[serde(rename = "AD_MANAGER")]
    AdManager,
}

impl ToString for AudienceGroupCreateRoute {
    fn to_string(&self) -> String {
        match self {
            Self::OaManager => String::from("OA_MANAGER"),
            Self::MessagingApi => String::from("MESSAGING_API"),
            Self::PointAd => String::from("POINT_AD"),
            Self::AdManager => String::from("AD_MANAGER"),
        }
    }
}

impl Default for AudienceGroupCreateRoute {
    fn default() -> AudienceGroupCreateRoute {
        Self::OaManager
    }
}
